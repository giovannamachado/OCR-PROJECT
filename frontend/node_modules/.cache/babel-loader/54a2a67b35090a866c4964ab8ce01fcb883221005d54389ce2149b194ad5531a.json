{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giova\\\\OneDrive\\\\Documentos\\\\Projetos\\\\Trabalho\\\\OCR-Project\\\\frontend\\\\src\\\\pages\\\\UploadPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadPage() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [message, setMessage] = useState('');\n  const [progress, setProgress] = useState(0);\n  const [extractedText, setExtractedText] = useState('');\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      setMessage('Por favor, selecione um arquivo.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      setMessage('');\n      setProgress(0);\n      const response = await axios.post('http://localhost:3000/upload', formData, {\n        onUploadProgress: progressEvent => {\n          const percent = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setProgress(percent);\n        }\n      });\n      setMessage('Upload realizado com sucesso!');\n      setExtractedText(response.data.text); // Supondo que o backend retorna o texto extraído em `data.text`\n    } catch (error) {\n      setMessage('Erro ao fazer upload.');\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload de Documentos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Enviar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), progress > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Progresso: \", progress, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 24\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }, this), extractedText && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Texto Extra\\xEDdo:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: extractedText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadPage, \"2OuKB8IPE9uzc20uZACXlMD7+aU=\");\n_c = UploadPage;\nvar _c;\n$RefreshReg$(_c, \"UploadPage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadPage","_s","file","setFile","message","setMessage","progress","setProgress","extractedText","setExtractedText","handleFileChange","event","target","files","handleUpload","formData","FormData","append","response","post","onUploadProgress","progressEvent","percent","Math","round","loaded","total","data","text","error","console","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/giova/OneDrive/Documentos/Projetos/Trabalho/OCR-Project/frontend/src/pages/UploadPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function UploadPage() {\r\n  const [file, setFile] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n  const [progress, setProgress] = useState(0);\r\n  const [extractedText, setExtractedText] = useState('');\r\n\r\n  const handleFileChange = (event) => {\r\n    setFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) {\r\n      setMessage('Por favor, selecione um arquivo.');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    try {\r\n      setMessage('');\r\n      setProgress(0);\r\n\r\n      const response = await axios.post('http://localhost:3000/upload', formData, {\r\n        onUploadProgress: (progressEvent) => {\r\n          const percent = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n          setProgress(percent);\r\n        },\r\n      });\r\n\r\n      setMessage('Upload realizado com sucesso!');\r\n      setExtractedText(response.data.text); // Supondo que o backend retorna o texto extraído em `data.text`\r\n    } catch (error) {\r\n      setMessage('Erro ao fazer upload.');\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px', fontFamily: 'Arial, sans-serif' }}>\r\n      <h1>Upload de Documentos</h1>\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <button onClick={handleUpload}>Enviar</button>\r\n\r\n      {progress > 0 && <p>Progresso: {progress}%</p>}\r\n      {message && <p>{message}</p>}\r\n\r\n      {extractedText && (\r\n        <div>\r\n          <h2>Texto Extraído:</h2>\r\n          <p>{extractedText}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}